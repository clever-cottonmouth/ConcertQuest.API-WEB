@model ConcertBooking.WebHost.ViewModels.PagedConcertViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Concert List</h1>

<p>
    <a asp-action="Create" class="btn btn-info">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Name
            </th>
            <th>
                DateTime
            </th>
            <th>
               VenueName
            </th>
            <th>
               ArtistName
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Concerts) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VenueName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArtistName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                    @Html.ActionLink("GetTickets", "GetTickets", new { id=item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var previous = Model.PageInfo.HasPrevious ? "" : "disabled"; 
    var next = Model.PageInfo.HasNext ? "" : "disabled"; 
}


<a class="btn btn-info @previous" asp-route-pageNumber="@(Model.PageInfo.PageNumber - 1)">Previous</a>
<a class="btn btn-info @next" asp-route-pageNumber="@(Model.PageInfo.PageNumber + 1)">Next</a>

